import { LocaleData } from '../I18nManager';

/**
 * English translations (base language) - COMPLETE ENHANCED VERSION WITH FULL SETTINGS LOCALIZATION
 */
export const enTranslations: LocaleData = {
  general: {
    loading: 'Loading...',
    save: 'Save',
    cancel: 'Cancel',
    delete: 'Delete',
    edit: 'Edit',
    add: 'Add',
    remove: 'Remove',
    confirm: 'Confirm',
    close: 'Close',
    search: 'Search',
    clear: 'Clear',
    refresh: 'Refresh',
    error: 'Error',
    success: 'Success',
    warning: 'Warning',
    info: 'Info',
    more: 'more',
    from: 'from',
    page: 'Page',
    next: 'Next',
    previous: 'Previous',
    updating: 'updating',
    remaining: 'remaining',
    view: 'View',
  },
  settings: {
    title: 'Macros Settings',
    tabs: {
      general: 'General',
      display: 'Display',
      foodSources: 'Food Sources',
      mealTemplates: 'Meal Templates',
      foodTolerances: 'Food Tolerances',
      advanced: 'Advanced',
      support: 'Support',
    },
    storage: {
      title: 'Storage',
      folder: 'Storage folder',
      folderDesc: 'Where to save food .md files with nutrition data',
    },
    targets: {
      title: 'Daily nutrition targets',
      manualTitle: 'Manual Target Settings',
      templates: {
        title: 'Macro Templates',
        description: 'Quick presets for different dietary approaches and official recommendations',
        custom: 'üéØ Custom (Current Values)',
        keto: 'ü•ë Ketogenic Diet (70% Fat, 5% Carbs, 25% Protein)',
        lowCarb: 'ü•© Low Carb (40% Fat, 20% Carbs, 40% Protein)',
        mediterranean: 'ü´í Mediterranean (35% Fat, 45% Carbs, 20% Protein)',
        balanced: '‚öñÔ∏è Balanced Diet (30% Fat, 40% Carbs, 30% Protein)',
        highProtein: 'üí™ High Protein (25% Fat, 25% Carbs, 50% Protein)',
        plantBased: 'üå± Plant-Based (25% Fat, 55% Carbs, 20% Protein)',
        usdaMen: 'üá∫üá∏ USDA Men (20-35% Fat, 45-65% Carbs, 10-35% Protein)',
        usdaWomen: 'üá∫üá∏ USDA Women (20-35% Fat, 45-65% Carbs, 10-35% Protein)',
        athlete: 'üèÉ Athletic Performance (25% Fat, 55% Carbs, 20% Protein)',
        cutting: '‚úÇÔ∏è Cutting/Weight Loss (25% Fat, 30% Carbs, 45% Protein)',
        bulking: 'üìà Bulking/Muscle Gain (25% Fat, 45% Carbs, 30% Protein)',
        info: 'üí° Tip: Select a template above to quickly set up your daily targets, then adjust individual values as needed. Templates are based on percentage of total calories and established dietary guidelines.',
        notFound: 'Macro template not found',
        applied: 'Applied {name} macro template',
        ketoName: 'Ketogenic Diet',
        ketoDesc: 'Very low carb, high fat diet for ketosis',
        lowCarbName: 'Low Carb',
        lowCarbDesc: 'Moderate carb restriction with higher protein',
        mediterraneanName: 'Mediterranean Diet',
        mediterraneanDesc: 'Traditional Mediterranean eating pattern',
        balancedName: 'Balanced Diet',
        balancedDesc: 'Well-rounded macronutrient distribution',
        highProteinName: 'High Protein',
        highProteinDesc: 'High protein for muscle building/preservation',
        plantBasedName: 'Plant-Based',
        plantBasedDesc: 'Plant-focused with adequate protein',
        usdaMenName: 'USDA Men (Moderate)',
        usdaMenDesc: 'USDA recommendations for adult men',
        usdaWomenName: 'USDA Women (Moderate)',
        usdaWomenDesc: 'USDA recommendations for adult women',
        athleteName: 'Athletic Performance',
        athleteDesc: 'High carb for endurance and performance',
        cuttingName: 'Cutting/Weight Loss',
        cuttingDesc: 'High protein, lower calorie for fat loss',
        bulkingName: 'Bulking/Muscle Gain',
        bulkingDesc: 'Higher calories and protein for muscle growth',
      },
      calories: 'Daily calorie target',
      caloriesDesc: 'Your daily calorie goal in kcal',
      protein: 'Daily protein target',
      proteinDesc: 'Your daily protein goal in grams',
      fat: 'Daily fat target',
      fatDesc: 'Your daily fat goal in grams',
      carbs: 'Daily carbs target',
      carbsDesc: 'Your daily carbohydrates goal in grams',
    },
    display: {
      title: 'Display',
      showSummaryRows: 'Show macros summary rows',
      showSummaryRowsDesc:
        'Toggle whether to display the totals, targets, and remaining rows in the macros table.',
      disableTooltips: 'Disable tooltips',
      disableTooltipsDesc: 'Turn off all hover tooltips in macros tables for a cleaner interface.',
      showCellPercentages: 'Show cell percentages',
      showCellPercentagesDesc: 'Display percentage values inside macro cells in tables.',
      energyUnit: 'Energy unit',
      energyUnitDesc: 'Choose between kilocalories (kcal) and kilojoules (kJ) for energy display',
      energyUnitKcal: 'Kilocalories (kcal)',
      energyUnitKj: 'Kilojoules (kJ)',
      energyConversionNote:
        'Energy values are automatically converted between kcal and kJ (1 kcal = 4.184 kJ)',
      addToMacrosTabOrder: 'Add to macros tab order',
      addToMacrosTabOrderDesc:
        'Customize the order of tabs in the Add to Macros modal by dragging and dropping them below.',
      tabOrderInstructions:
        'Drag and drop the items below to change the tab order. The first item will be the default active tab.',
      dragToReorder: 'Drag to reorder',
    },
    charts: {
      title: 'Pie chart customization',
      proteinColor: 'Protein color',
      proteinColorDesc: 'Color for protein slice in the pie chart',
      fatColor: 'Fat color',
      fatColorDesc: 'Color for fat slice in the pie chart',
      carbsColor: 'Carbs color',
      carbsColorDesc: 'Color for carbs slice in the pie chart',
      preview: 'Pie chart preview',
    },
    meals: {
      title: 'Meal templates',
      description:
        'Create reusable meal templates that can be quickly added to your macro tracking.',
      create: 'Create a new meal template',
      createDesc: 'Create a new set of food items that you often eat together',
      addButton: '+ Add meal template',
      noTemplates: 'No meal templates yet. Create one using the button above.',
      noItems: 'No items in this template',
    },
    tolerances: {
      title: 'Food Tolerances & Intolerances',
      description:
        'Track foods that cause adverse reactions or intolerances. These will be highlighted in your macro tables with visual indicators.',
      noTolerances:
        'No food tolerances configured. Add tolerances to track foods that cause adverse reactions.',
      dateAdded: 'Added on {date}',
      toleranceRemoved: 'Tolerance for "{foodName}" removed successfully',
      clearAll: 'Clear All Tolerances',
      clearAllDesc: 'Remove all food tolerance data from your settings',
      clearAllButton: 'Clear All',
      allTolerancesCleared: 'All food tolerances have been cleared',
    },
    api: {
      title: 'API Configuration',
      description:
        'Configure food database APIs to enable search functionality. You can use one or multiple sources.',
      fatSecretTitle: 'FatSecret API',
      fatSecretSignupText: 'Sign up for free FatSecret API credentials at:',
      fatSecretEnable: 'Enable FatSecret',
      fatSecretEnableDesc: 'Enable FatSecret food database search',
      fatSecretCredentialsRequired: 'Please configure FatSecret API credentials first.',
      fatSecretNotConfigured:
        '‚ö†Ô∏è FatSecret API credentials not configured. Configure credentials to enable FatSecret search.',
      fatSecretConfigured: '‚úÖ FatSecret API credentials configured successfully.',
      usdaTitle: 'USDA FoodData Central API',
      usdaDescription:
        'The USDA FoodData Central provides comprehensive nutrition data for both branded and foundation foods.',
      usdaSignupText: 'Get your free USDA API key at:',
      usdaEnable: 'Enable USDA',
      usdaEnableDesc: 'Enable USDA FoodData Central database search',
      usdaCredentialsRequired: 'Please configure USDA API key first.',
      usdaNotConfigured: '‚ö†Ô∏è USDA API key not configured. Configure API key to enable USDA search.',
      usdaConfigured: '‚úÖ USDA API key configured successfully.',
      usdaKey: 'USDA API key',
      usdaKeyDesc: 'Your USDA FoodData Central API key (free registration required)',
      usdaKeyPlaceholder: 'Enter your USDA API key here',
      key: 'FatSecret API key',
      keyDesc: 'Your FatSecret API key (required for FatSecret search functionality)',
      keyPlaceholder: 'Enter your FatSecret API key here',
      secret: 'FatSecret API secret',
      secretDesc: 'Your FatSecret API secret (required for FatSecret search functionality)',
      secretPlaceholder: 'Enter your FatSecret API secret here',
      testConnection: 'Test Connection',
      testFatSecretConnection: 'Test FatSecret connection',
      testFatSecretConnectionDesc: 'Click to test your FatSecret API credentials.',
      testUsdaConnection: 'Test USDA connection',
      testUsdaConnectionDesc: 'Click to test your USDA API key.',
      securityNote: 'Your API credentials will be stored securely in your vault settings.',

      // Open Food Facts translations
      openFoodFactsTitle: 'Open Food Facts',
      openFoodFactsDescription:
        'Open Food Facts is a free, collaborative database of food products from around the world. No API key required!',
      openFoodFactsInfo:
        'Features: Multi-language support, nutrition grades, processing levels (NOVA), environmental scores, and ingredient lists.',
      openFoodFactsLearnMore: 'Learn more about Open Food Facts ‚Üí',
      openFoodFactsEnable: 'Enable Open Food Facts',
      openFoodFactsEnableDesc:
        'Search the collaborative food database. No API key required - completely free to use!',
      openFoodFactsEnabled: '‚úÖ Open Food Facts is enabled and ready to use',
      openFoodFactsDisabled: '‚ö†Ô∏è Open Food Facts is disabled',
      openFoodFactsNotEnabled: 'Open Food Facts is not enabled. Please enable it first.',
      openFoodFactsLanguage: 'Search Language',
      openFoodFactsLanguageDesc:
        'Language preference for search results and product names. "Auto" uses your Obsidian language setting.',
      openFoodFactsLanguageAuto: 'üåê Auto (use Obsidian language)',
      openFoodFactsLanguageEn: 'üá∫üá∏ English',
      openFoodFactsLanguageFr: 'üá´üá∑ Fran√ßais',
      openFoodFactsLanguageDe: 'üá©üá™ Deutsch',
      openFoodFactsLanguageEs: 'üá™üá∏ Espa√±ol',
      openFoodFactsLanguageIt: 'üáÆüáπ Italiano',
      openFoodFactsLanguagePt: 'üáµüáπ Portugu√™s',
      openFoodFactsLanguageZh: 'üá®üá≥ ‰∏≠Êñá',
      openFoodFactsLanguageJa: 'üáØüáµ Êó•Êú¨Ë™û',
      openFoodFactsLanguageKo: 'üá∞üá∑ ÌïúÍµ≠Ïñ¥',
      openFoodFactsLanguageRu: 'üá∑üá∫ –†—É—Å—Å–∫–∏–π',
      openFoodFactsLanguageAr: 'üá∏üá¶ ÿßŸÑÿπÿ±ÿ®Ÿäÿ©',
      openFoodFactsDataQuality: 'Data Quality Filter',
      openFoodFactsDataQualityDesc:
        'Minimum quality threshold for search results. Higher quality = more complete nutrition data but fewer results.',
      openFoodFactsDataQualityAll: 'üìä All Results (fastest, most results)',
      openFoodFactsDataQualityMedium: 'üìà Medium+ Quality (balanced)',
      openFoodFactsDataQualityHigh: '‚≠ê High Quality Only (most accurate)',
      testOpenFoodFactsConnection: 'Test Open Food Facts Connection',
      testOpenFoodFactsConnectionDesc:
        "Test the connection to Open Food Facts database to ensure it's working properly.",
      openFoodFactsTestSuccess: '‚úÖ Open Food Facts connection successful! Found {count} results.',
      openFoodFactsTestNoResults:
        '‚ö†Ô∏è Open Food Facts connection succeeded but no results found for "apple". This might be normal.',
      openFoodFactsTestCORSError:
        '‚ùå Connection blocked by CORS policy. This is a browser security limitation.',
      openFoodFactsTestNetworkError:
        '‚ùå Network error connecting to Open Food Facts. Check your internet connection.',
      openFoodFactsTestTimeoutError: '‚ùå Request timeout. Open Food Facts servers may be slow.',
      openFoodFactsTestError: '‚ùå Open Food Facts test failed: {error}',
    },
    developer: {
      title: 'Developer mode',
      enable: 'Enable developer mode',
      enableDesc:
        'Enables debug logging and developer commands. Only use if you need to troubleshoot the plugin.',
      active:
        'Developer mode is active. Additional developer commands are available in the command palette.',
    },
    rename: {
      header: 'Rename Tracking',
      followRenamesEnabled: 'Enable rename tracking',
      followRenamesEnabledDesc:
        'Enable automatic tracking and updating of food name references when files are renamed',
      autoConfirmRenames: 'Auto-confirm renames',
      autoConfirmRenamesDesc:
        'Automatically apply rename changes without showing confirmation modal',
      renameScopeFolder: 'Rename scope folder',
      renameScopeFolderDesc: 'Folder to monitor for food file renames (relative to vault root)',
      backupOnRename: 'Create backups on rename',
      backupOnRenameDesc:
        'Create backup copies of files before modifying them during rename operations',
      caseSensitiveFoodMatch: 'Case-sensitive food matching',
      caseSensitiveFoodMatchDesc: 'Use case-sensitive matching when finding food name references',
      includeAliasesOnRename: 'Include aliases in rename',
      includeAliasesOnRenameDesc:
        'Also update file aliases that match the old food name (experimental)',
    },
    support: {
      title: '‚òï Support the Plugin',
      description: 'If you find this plugin helpful, consider supporting its development!',
      coffeeText: 'Support continued development of the Macros plugin:',
      linksTitle: 'üìö Documentation & Links',
      linksDescription: 'Useful resources for the Macros plugin:',
      githubLink: 'üîó GitHub Repository',
      docsLink: 'üìñ Plugin Documentation',
      issuesLink: 'üêõ Report Issues',
      pluginInfoTitle: '‚ÑπÔ∏è Plugin Information',
      pluginVersion: 'Version: {version}',
      pluginAuthor: 'Author: {author}',
      pluginDescription: 'Description: {description}',
      thanksMessage:
        'üôè Thank you for using the Macros plugin! Your support helps keep this project alive and growing.',
    },
  },
  food: {
    search: {
      title: 'Search for food',
      placeholder: 'Start typing to search (e.g., Apple)',
      noResults: 'No results found. Try a different search term.',
      searching: 'Searching...',
      results: 'Results for "{searchTerm}" (Page {page})',
      tabs: {
        all: 'All',
        fatsecret: 'FatSecret',
        usda: 'USDA',
        usdaFoundation: 'USDA | Foundation',
        usdaBranded: 'USDA | Branded',
        usdaLegacy: 'USDA | Legacy',
        openfoodfacts: 'Open Food Facts',
      },
      source: {
        fatsecret: 'FatSecret',
        usda: 'USDA',
        openfoodfacts: 'Open Food Facts',
      },
      error: {
        fetchFailed: 'Failed to fetch search results. Please try again.',
      },
    },
    entry: {
      title: 'Add Food Item',
      description: 'Choose how you would like to add your food item:',
      liveSearch: 'Live Search',
      liveSearchDesc: 'Search FatSecret database for nutritional information',
      manualEntry: 'Manual Entry',
      manualEntryDesc: 'Manually enter nutritional information for your food item',
      apiConfigured: '‚úì API configured',
      apiNotConfigured: '‚ö† API not configured',
      alwaysAvailable: '‚úì Always available',
    },
    manual: {
      title: 'Manual Food Entry',
      description: 'Enter the nutritional information for your food item:',
      foodName: 'Food Name',
      servingSize: 'Serving Size (grams)',
      calories: 'Calories',
      energy: 'Energy',
      protein: 'Protein (g)',
      fat: 'Fat (g)',
      carbs: 'Carbohydrates (g)',
      required: '* Required fields',
      save: 'Save Food Item',
      multipleEntryDesc:
        'You can add multiple food items in one session using the "Add & Continue" button.',
      addedItems: 'Added Items',
      noItemsAdded: 'No items added yet',
      addAnotherItem: 'Add Another Food Item',
      enterFoodInfo: 'Enter Food Information',
      addAndContinue: 'Add & Continue',
      addThisItem: 'Add This Item',
      finishAdding: 'Finish Adding',
      itemSavedSuccessfully: 'Food item saved successfully!',
      itemSavedReadyForNext: 'Item saved! Ready to add another.',
      allItemsSaved: 'All {count} items saved successfully!',
      itemRemoved: 'Item removed from list',
      keyboardShortcuts: 'Tip: Press Enter to save, Ctrl+Enter to add & continue',
    },
    customServing: {
      title: 'Custom serving size for {foodName}',
      description: 'Default serving is {defaultServing}g. Enter a custom serving size in grams:',
      submit: 'Submit',
    },
    fileName: {
      title: 'Save Food Item',
      description: 'Please enter a name for this food item:',
      label: 'File Name:',
      placeholder: 'Enter food name...',
      save: 'Save',
      cancel: 'Cancel',
      required: 'Please enter a file name.',
      duplicateError:
        'A food item with this name already exists in your Nutrition folder. Please choose a different name to avoid conflicts.',
    },
  },
  meals: {
    create: {
      title: 'Create New Meal Template',
      description:
        'Give your meal template a name, then search and select food items to include in it.',
      nameLabel: 'Meal Template Name',
      namePlaceholder: 'e.g., Breakfast, Post-Workout, etc.',
      searchPlaceholder: 'Search food items...',
      availableFoods: 'ü•ó Available Food Items',
      selectedItems: 'Selected Items',
      noSelectedItems: 'No items selected yet',
      noResults: 'No food items found',
      addToMeal: '+ Add to Meal',
      remove: '‚à∏ Remove',
      editServing: '‚úé Edit Serving',
      create: 'Create Meal Template',
      customServing: 'Custom: {serving}g',
      defaultServing: 'Default: {serving}',
    },
    edit: {
      title: 'Edit Meal Template: "{mealName}"',
      description:
        'Search and select food items to include in this meal template. You can customize serving sizes for each item.',
      saveChanges: 'Save Changes',
    },
    addTo: {
      title: 'Add Items to Macros',
      description:
        'Search and select meal templates or individual food items to add to your macros table.',
      searchPlaceholder: 'Search meals and foods...',
      mealTemplates: 'üçΩÔ∏è Meal Templates',
      individualFoods: 'ü•óIndividual Foods',
      selectedItems: 'Selected Items',
      createGroup: 'üóÇÔ∏è Create Group',
      groupName: 'Group Name',
      groupNamePlaceholder: 'Enter group name (e.g., breakfast, lunch)',
      selectFoodsForGroup: 'Select Foods for This Group',
      addToGroup: '+ Add to Group',
      enterGroupNameFirst: 'Enter group name first',
      pendingGroup: 'Pending Group',
      noSelectedItems: 'No items selected yet',
      addSelectedItems: 'Add Selected Items',
      addMeal: '+ Add Meal',
      addFood: '+ Add Food',
      added: '‚úì Added',
    },
  },
  table: {
    headers: {
      food: 'Food',
      serving: 'Serving',
      calories: 'Calories',
      protein: 'Protein',
      fat: 'Fat',
      carbs: 'Carbs',
      servingShort: 'Qty',
      caloriesShort: 'Cal',
      proteinShort: 'Pro',
      fatShort: 'Fat',
      carbsShort: 'Carb',
    },
    summary: {
      totals: 'Totals',
      targets: 'Targets',
      remaining: 'Remaining',
      today: "Today's Summary",
      yesterday: "Yesterday's Summary",
      date: '{date} Summary',
      over: 'over',
      macrosSummary: 'Macros Summary',
      dailyTarget: 'of daily target',
      otherItems: 'Other Items',
    },
    actions: {
      addItems: 'Add Items',
      collapseAll: 'Collapse All',
      expandAll: 'Expand All',
      removeItem: 'Remove Item',
      clickToEdit: 'Click to edit',
      longPressToDelete: 'Long press to delete',
      removeFromMeal: 'Remove {itemName} from {mealName}',
      removeGroup: 'Remove group',
      removeMeal: 'Remove meal',
      longPressForOptions: 'Long press for options',
      rightClickForOptions: 'Right click for options',
    },
    meal: {
      items: '{count} items',
      calories: '{calories} cal',
    },
    confirmDelete: {
      mealitem: 'Remove this item from the meal?',
      mealitemContext:
        'This will remove the selected food item from your meal. This action cannot be undone.',
      item: 'Remove "{itemName}"?',
      itemContext: 'This action cannot be undone.',
    },
  },
  charts: {
    title: "Today's Macros",
    titleDate: 'Macros for {date}',
    titleCombined: 'Combined Macros (last {days} days)',
    titleMultiple: 'Combined Macros: {ids}',
    calories: 'Calories:',
    noMacros: 'No macros found for IDs: {ids}',
    noData: 'No data found for IDs: {ids}',
    loading: 'Loading chart data...',
    error: 'Unable to render macro chart. Please reload the page.',
    errors: {
      noIdsProvided: 'No id(s) provided in macrospc block',
      renderError: 'Error rendering chart: {error}',
    },
  },
  calculator: {
    title: 'Macro Calculator',
    description: 'Calculate nutrition totals for selected macro tables.',
    selectTables: 'Select macro tables to include in calculation:',
    noTables: 'No macro tables found. Create some macros tables first.',
    calculate: 'Calculate Totals',
    results: 'Calculation Results',
    aggregate: 'Aggregate Totals',
    breakdown: 'Breakdown by Table',
    combinedTotals: 'Combined Totals',
    noDetailData: 'No detailed data available.',
    chartTitle: 'Macro Trends Over Time',
    notEnoughData: 'Need at least 2 data points to show trends (currently have {count})',
    chartError: 'Chart Error: {error}',
    dataSummary: 'Data Summary:',
    quantity: 'Quantity',
    standardQuantity: 'Standard',
    errorLoadingData: 'Error loading data: {error}',
    summarySingleDate: 'Calculation Summary: {date}',
    summaryDateRange: 'Calculation Summary: {startDate} - {endDate}',
    summaryDateRangeSameMonth: 'Calculation Summary: {month} {startDay} - {endDay}, {year}',
    summaryDays: 'Calculation Summary (last {count} day{days})',
    summaryTables: 'Calculation Summary ({count} table{tables})',
    chartAxisDate: 'Date/ID',
    chartAxisGrams: 'Grams',
    tableHeaders: {
      id: 'Table ID',
    },
    tooltips: {
      calories: '{value} calories from {id} ({percentage}% of total)',
      macro: '{value} {macro} ({percentage}% of total macros)',
    },
    errors: {
      noContent: 'Error: No content provided in macroscalc block.',
      noIds: 'Error: Please specify table IDs using "id:" or "ids:"',
      noTableIds: 'Error: No table IDs provided.',
    },
  },
  metrics: {
    edit: {
      title: 'Configure Metrics',
      description:
        'Choose which metrics to display in macroscalc dashboards. Changes apply globally to all macroscalc blocks.',
      saved: 'Metrics configuration saved',
    },
    categories: {
      totals: 'Totals & Averages',
      ratios: 'Macro Ratios',
      trends: 'Trends & Moving Averages',
      extremes: 'Extremes & Records',
      adherence: 'Adherence & Streaks',
      display: 'Display Options',
    },
    totalsAverages: {
      name: 'Totals & Averages',
      description: 'Show total and average values for the selected time period',
      totalCalories: 'Total Calories',
      avgCalories: 'Avg Calories',
      totalProtein: 'Total Protein',
      avgProtein: 'Avg Protein',
      totalFat: 'Total Fat',
      avgFat: 'Avg Fat',
      totalCarbs: 'Total Carbs',
      avgCarbs: 'Avg Carbs',
      perDay: 'per day',
      totalCaloriesTooltip: 'Total calories consumed over {days} days: {total}',
      avgCaloriesTooltip: 'Average calories per day over {days} days: {avg}',
      totalProteinTooltip: 'Total protein consumed over {days} days: {total}g',
      avgProteinTooltip: 'Average protein per day over {days} days: {avg}g',
      totalFatTooltip: 'Total fat consumed over {days} days: {total}g',
      avgFatTooltip: 'Average fat per day over {days} days: {avg}g',
      totalCarbsTooltip: 'Total carbohydrates consumed over {days} days: {total}g',
      avgCarbsTooltip: 'Average carbohydrates per day over {days} days: {avg}g',
    },
    ratios: {
      name: 'Macro Ratios',
      description: 'Show the percentage breakdown of calories from each macronutrient',
      proteinPercent: 'Protein %',
      fatPercent: 'Fat %',
      carbsPercent: 'Carbs %',
      proteinPercentTooltip: '{percent}% of calories from protein ({grams}g = {calories} kcal)',
      fatPercentTooltip: '{percent}% of calories from fat ({grams}g = {calories} kcal)',
      carbsPercentTooltip: '{percent}% of calories from carbs ({grams}g = {calories} kcal)',
    },
    trends: {
      name: 'Trends',
      description: 'Show rolling averages and trends over time',
      descriptionAuto:
        'Automatically calculates rolling averages based on the number of dates provided',
      windowSize: 'Rolling Average Window',
      windowSizeDesc: 'Number of days to include in rolling average calculation',
      insufficientData: 'Insufficient Data',
      needMoreDays: 'Need {needed} days minimum',
      currentDays: '{current} days available',
      daysAvailable: 'days available',
      rollingAvgCalories: '{days}-Day Avg Calories',
      rollingAvgProtein: '{days}-Day Avg Protein',
      rollingAvgFat: '{days}-Day Avg Fat',
      rollingAvgCarbs: '{days}-Day Avg Carbs',
      avgCalories: '{days}-day avg calories',
      avgProtein: '{days}-day avg protein',
      avgFat: '{days}-day avg fat',
      avgCarbs: '{days}-day avg carbs',
      through: 'through',
      rollingAvgCaloriesTooltip: '{days}-day rolling average calories: {value} (through {endDate})',
      rollingAvgProteinTooltip: '{days}-day rolling average protein: {value}g (through {endDate})',
      rollingAvgFatTooltip: '{days}-day rolling average fat: {value}g (through {endDate})',
      rollingAvgCarbsTooltip: '{days}-day rolling average carbs: {value}g (through {endDate})',
      simpleAvgTooltip: 'Average over {days} days: {value}',
    },
    extremes: {
      name: 'Extremes',
      description: 'Show the highest and lowest values in the dataset',
      maxCalories: 'Max Calories',
      minCalories: 'Min Calories',
      maxProtein: 'Max Protein',
      minProtein: 'Min Protein',
      maxFat: 'Max Fat',
      minFat: 'Min Fat',
      maxCarbs: 'Max Carbs',
      minCarbs: 'Min Carbs',
      maxCaloriesTooltip: 'Highest calorie day: {value} on {date}',
      minCaloriesTooltip: 'Lowest calorie day: {value} on {date}',
      maxProteinTooltip: 'Highest protein day: {value}g on {date}',
      minProteinTooltip: 'Lowest protein day: {value}g on {date}',
      maxFatTooltip: 'Highest fat day: {value}g on {date}',
      minFatTooltip: 'Lowest fat day: {value}g on {date}',
      maxCarbsTooltip: 'Highest carbs day: {value}g on {date}',
      minCarbsTooltip: 'Lowest carbs day: {value}g on {date}',
    },
    adherence: {
      name: 'Adherence & Streaks',
      description: "Track how well you're meeting your nutrition targets",
      calorieTolerance: 'Calorie Tolerance',
      calorieToleranceDesc: 'Percentage tolerance for calorie target adherence (¬±%)',
      proteinTolerance: 'Protein Tolerance',
      proteinToleranceDesc: 'Percentage tolerance for protein target adherence (¬±%)',
      fatTolerance: 'Fat Tolerance',
      fatToleranceDesc: 'Percentage tolerance for fat target adherence (¬±%)',
      carbsTolerance: 'Carbs Tolerance',
      carbsToleranceDesc: 'Percentage tolerance for carbs target adherence (¬±%)',
      calorieAdherence: 'Calorie Adherence',
      proteinAdherence: 'Protein Adherence',
      fatAdherence: 'Fat Adherence',
      carbsAdherence: 'Carbs Adherence',
      calorieStreak: 'Calorie Streak',
      proteinStreak: 'Protein Streak',
      fatStreak: 'Fat Streak',
      carbsStreak: 'Carbs Streak',
      withinTolerance: 'within ¬±{tolerance}%',
      day: 'day',
      days: 'days',
      calorieAdherenceTooltip:
        '{percent}% of days within ¬±{tolerance}% of {target} calorie target ({days} days total)',
      proteinAdherenceTooltip:
        '{percent}% of days within ¬±{tolerance}% of {target}g protein target ({days} days total)',
      fatAdherenceTooltip:
        '{percent}% of days within ¬±{tolerance}% of {target}g fat target ({days} days total)',
      carbsAdherenceTooltip:
        '{percent}% of days within ¬±{tolerance}% of {target}g carbs target ({days} days total)',
      calorieStreakTooltip: 'Current streak of {streak} days meeting {target} calorie target',
      proteinStreakTooltip: 'Current streak of {streak} days meeting {target}g protein target',
      fatStreakTooltip: 'Current streak of {streak} days meeting {target}g fat target',
      carbsStreakTooltip: 'Current streak of {streak} days meeting {target}g carbs target',
      calorieStreakTooltipWithTolerance:
        'Current streak of {streak} days within ¬±{tolerance}% of {target} calorie target',
      proteinStreakTooltipWithTolerance:
        'Current streak of {streak} days within ¬±{tolerance}% of {target}g protein target',
      fatStreakTooltipWithTolerance:
        'Current streak of {streak} days within ¬±{tolerance}% of {target}g fat target',
      carbsStreakTooltipWithTolerance:
        'Current streak of {streak} days within ¬±{tolerance}% of {target}g carbs target',
      longestCalorieStreak: 'Longest Calorie Streak',
      longestProteinStreak: 'Longest Protein Streak',
      longestFatStreak: 'Longest Fat Streak',
      longestCarbsStreak: 'Longest Carbs Streak',
      longestCalorieStreakTooltip:
        'Longest streak of {streak} consecutive days within ¬±{tolerance}% of {target} kcal target ({dateRange})',
      longestProteinStreakTooltip:
        'Longest streak of {streak} consecutive days within ¬±{tolerance}% of {target}g protein target ({dateRange})',
      longestFatStreakTooltip:
        'Longest streak of {streak} consecutive days within ¬±{tolerance}% of {target}g fat target ({dateRange})',
      longestCarbsStreakTooltip:
        'Longest streak of {streak} consecutive days within ¬±{tolerance}% of {target}g carbs target ({dateRange})',
      noStreak: 'No streak yet',
      noStreakTooltip:
        'No consecutive days found within ¬±{tolerance}% of {target} target in the selected date range',
    },
    display: {
      name: 'Display Options',
      description: 'Configure which visual elements to show in the macroscalc view',
      showTable: 'Show Data Table',
      showTableDesc: 'Display the detailed breakdown table with expandable rows',
      showChart: 'Show Trend Chart',
      showChartDesc: 'Display the Chart.js visualization showing trends over time',
    },
  },
  commands: {
    forceReload: 'Force reload all macros',
    addFood: 'Add food item (search or manual entry)',
    toggleDebug: 'Toggle debug mode',
  },
  notifications: {
    foodSaved: 'Saved {fileName}',
    foodSaveError: 'Error saving food item: {error}',
    mealTemplateCreated: 'Meal template "{name}" created successfully with {count} items!',
    mealTemplateUpdated: 'Meal template "{name}" updated successfully',
    itemsAdded: 'Added {count} items to your macros table.',
    itemsAddError: 'Error adding items: {error}',
    reloadComplete: 'Reload complete!',
    reloadInProgress: 'Forcing complete reload of all macros data...',
    debugEnabled: 'Debug mode enabled',
    debugDisabled: 'Debug mode disabled',
    testConnectionSuccess: 'Test connection successful!',
    testConnectionFailed: 'Test connection failed. Please check your API credentials.',
    apiCredentialsRequired: 'Please configure your API credentials first.',
    chartPreviewUnavailable: 'Chart preview unavailable',
    developerModeChanged: 'Developer mode {status}. Restart Obsidian to apply all changes.',
    languageChanged: 'Language changed to {language}. Restart Obsidian to apply changes.',
    itemRemoved: 'Item {item} removed',
    itemRemoveError: 'Error removing item: {error}',
    removalCancelled: 'Removal cancelled',
    quantityUpdateError: 'Error updating quantity: {error}',
    offDataIncomplete:
      'Some Open Food Facts data may be incomplete. Consider verifying nutrition information.',
    offProductSaved: 'Open Food Facts product saved successfully with available data',
  },
  validation: {
    required: 'This field is required',
    invalidNumber: 'Please enter a valid number',
    invalidServing: 'Please enter a valid serving size',
    duplicateName: 'A food item named "{name}" already exists',
    duplicateMealName:
      'A meal template with that name already exists. Please choose a different name.',
    selectAtLeastOne: 'Please select at least one item',
    enterMealName: 'Please enter a meal name',
    noNutritionData: 'Could not process nutrition data for this food.',
  },
  comments: {
    addMealComment: 'Add Meal Comment',
    editMealComment: 'Edit Meal Comment',
    addItemComment: 'Add Food Comment',
    editItemComment: 'Edit Food Comment',
    mealDescription: 'Add a comment for the meal: {mealName}',
    itemDescription: 'Add a comment for: {itemName}',
    commentLabel: 'Comment:',
    mealPlaceholder: 'e.g., "Post-workout meal" or "High protein breakfast"',
    itemPlaceholder: 'e.g., "Organic brand" or "From local store"',
    addComment: 'Add Comment',
    updateComment: 'Update Comment',
    removeComment: 'Remove Comment',
    commentAdded: 'Comment added successfully',
    commentUpdated: 'Comment updated successfully',
    commentRemoved: 'Comment removed successfully',
    saveError: 'Error saving comment: {error}',
    removeError: 'Error removing comment: {error}',
    tooLong: 'Comment is too long (maximum 200 characters)',
    contextMenu: {
      addComment: 'Add comment',
      editComment: 'Edit comment',
      removeComment: 'Remove comment',
    },
  },
  timestamps: {
    addMealTimestamp: 'Add Meal Timestamp',
    editMealTimestamp: 'Edit Meal Timestamp',
    addItemTimestamp: 'Add Food Timestamp',
    editItemTimestamp: 'Edit Food Timestamp',
    mealDescription: 'Add a timestamp for the meal: {mealName}',
    itemDescription: 'Add a timestamp for: {itemName}',
    timeLabel: 'Time:',
    quickTimes: 'Quick Times:',
    breakfast: 'Breakfast',
    lunch: 'Lunch',
    dinner: 'Dinner',
    now: 'Now',
    addTimestamp: 'Add Timestamp',
    updateTimestamp: 'Update Timestamp',
    removeTimestamp: 'Remove Timestamp',
    timestampAdded: 'Timestamp added successfully',
    timestampUpdated: 'Timestamp updated successfully',
    timestampRemoved: 'Timestamp removed successfully',
    saveError: 'Error saving timestamp: {error}',
    removeError: 'Error removing timestamp: {error}',
    invalidTime: 'Please enter a valid time in HH:MM format',
    consumed: 'Consumed at {time}',
    contextMenu: {
      addTimestamp: 'Add timestamp',
      editTimestamp: 'Edit timestamp',
      removeTimestamp: 'Remove timestamp',
    },
  },
  tolerances: {
    addMealTolerance: 'Add Meal Tolerance',
    editMealTolerance: 'Edit Meal Tolerance',
    addItemTolerance: 'Add Food Tolerance',
    editItemTolerance: 'Edit Food Tolerance',
    mealDescription: 'Add tolerance information for the meal: {mealName}',
    itemDescription: 'Add tolerance information for: {itemName}',
    severityLabel: 'Severity Level:',
    severityMild: 'Mild',
    severityMildDesc: 'Minor discomfort or symptoms',
    severityModerate: 'Moderate',
    severityModerateDesc: 'Noticeable symptoms that affect daily activities',
    severitySevere: 'Severe',
    severitySevereDesc: 'Serious reactions requiring medical attention',
    symptomsLabel: 'Symptoms:',
    symptomsPlaceholder: 'e.g., "Stomach upset, bloating" or "Allergic reaction, hives"',
    symptomsRequired: 'Please describe the symptoms experienced',
    symptomsTooLong: 'Symptoms description is too long (maximum 200 characters)',
    addTolerance: 'Add Tolerance',
    updateTolerance: 'Update Tolerance',
    removeTolerance: 'Remove Tolerance',
    toleranceAdded: 'Food tolerance added successfully',
    toleranceUpdated: 'Food tolerance updated successfully',
    toleranceRemoved: 'Food tolerance removed successfully',
    saveError: 'Error saving tolerance: {error}',
    removeError: 'Error removing tolerance: {error}',
    severity: 'Severity',
    symptoms: 'Symptoms',
    contextMenu: {
      addTolerance: 'Add tolerance',
      editTolerance: 'Edit tolerance',
      removeTolerance: 'Remove tolerance',
    },
  },
  tooltips: {
    percentage: '{value}g {macro} ‚Ä¢ {percent}% of daily {macro} target',
    remaining: 'remaining',
    over: '{over}g over',
    targetExceeded: '(Target exceeded)',
    approachingTarget: '(Approaching target)',
    calories: '{value} calories ‚Ä¢ {percent}% of daily target ‚Ä¢ calories remaining',
    caloriesOver: '{value} calories ‚Ä¢ {percent}% of daily target ‚Ä¢ {over} calories over',
    caloriePercent: '{value} calories ‚Ä¢ {percent}% of daily target',
    macroComposition: '{value}g {macro} ({percent}% of total macros)',
    target: 'Target: {target}{unit}',
    dailyTarget: 'of daily target',
    offHighQuality: 'High quality community-verified data with complete nutrition information',
    offMediumQuality: 'Moderately complete community data, some information may be missing',
    offLowQuality: 'Limited data available, nutrition information may be incomplete',
    nutriScore: 'Nutri-Score: Nutrition quality grade from A (best) to E (worst)',
    novaGroup:
      'NOVA classification: Food processing level from 1 (unprocessed) to 4 (ultra-processed)',
    offCommunityData: 'Data sourced from the Open Food Facts community database',
  },
  errors: {
    fileNotFound: 'Selected food item not found.',
    noNutritionData: 'No nutritional data available for this item.',
    invalidServing: 'Invalid default serving size.',
    chartCreationFailed: 'Error creating chart visualization',
    dataLoadTimeout: 'Data load timeout',
    chartLibraryNotAvailable: 'Chart library not available',
    macrosNotFound: 'No macros block found for ID: {id}',
    updateFailed: 'Could not find macros block for ID: {id} to update',
    apiConnectionFailed: 'Error searching for food items. Please try again.',
    unknownError: 'Unknown error occurred',
    noActiveFile: 'No active file',
    macrosBlockNotFound: 'Macros block not found for meal: {mealName}',
    noMacrosData: 'No macros data found',
    mealNotFound: 'Meal "{mealName}" not found',
    foodItemNotFound: 'Food item "{foodName}" not found in meal "{mealName}"',
    updateMacrosBlockFailed: 'Failed to update macros block',
  },
  suggestions: {
    today: 'Today',
    todayDesc: "Insert today's date",
    yesterday: 'Yesterday',
    yesterdayDesc: "Insert yesterday's date",
    thisWeek: 'This Week',
    thisWeekDesc: 'Insert the last 7 days including today',
    lastWeek: 'Last Week',
    lastWeekDesc: 'Insert the previous week (7 days)',
    thisMonth: 'This Month',
    thisMonthDesc: 'Insert all days from start of month to today',
    lastMonth: 'Last Month',
    lastMonthDesc: 'Insert all days from the previous month',
  },
  dates: {
    months: {
      january: 'January',
      february: 'February',
      march: 'March',
      april: 'April',
      may: 'May',
      june: 'June',
      july: 'July',
      august: 'August',
      september: 'September',
      october: 'October',
      november: 'November',
      december: 'December',
    },
    monthsShort: {
      jan: 'Jan',
      feb: 'Feb',
      mar: 'Mar',
      apr: 'Apr',
      may: 'May',
      jun: 'Jun',
      jul: 'Jul',
      aug: 'Aug',
      sep: 'Sep',
      oct: 'Oct',
      nov: 'Nov',
      dec: 'Dec',
    },
    weekdays: {
      monday: 'Monday',
      tuesday: 'Tuesday',
      wednesday: 'Wednesday',
      thursday: 'Thursday',
      friday: 'Friday',
      saturday: 'Saturday',
      sunday: 'Sunday',
    },
    weekdaysShort: {
      mon: 'Mon',
      tue: 'Tue',
      wed: 'Wed',
      thu: 'Thu',
      fri: 'Fri',
      sat: 'Sat',
      sun: 'Sun',
    },
    today: 'today',
    yesterday: 'yesterday',
    tomorrow: 'tomorrow',
  },
  rename: {
    title: 'Rename Food References',
    summary: 'Rename "{oldName}" to "{newName}" in macro references',
    filesAffected: '{count} files affected',
    replace: 'Replace All',
    skip: 'Skip All',
    cancel: 'Cancel',
    previewBefore: 'Before',
    previewAfter: 'After',
    backup: 'Create backup before modifying files',
    noMatches: 'No macro references found for the renamed food',
    success: 'Successfully updated {count} files: {oldName} ‚Üí {newName}',
    error: 'Error during rename operation: {error}',
    cancelled: 'File rename cancelled. Reverted "{fileName}" back to original name.',
    revertError: 'Error reverting file rename: {error}',
  },
};
