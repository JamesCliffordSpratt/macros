import { LocaleData } from '../I18nManager';

/**
 * English translations (base language) - COMPLETE ENHANCED VERSION WITH LOCALIZATION
 */
export const enTranslations: LocaleData = {
  general: {
    loading: 'Loading...',
    save: 'Save',
    cancel: 'Cancel',
    delete: 'Delete',
    edit: 'Edit',
    add: 'Add',
    remove: 'Remove',
    confirm: 'Confirm',
    close: 'Close',
    search: 'Search',
    clear: 'Clear',
    refresh: 'Refresh',
    error: 'Error',
    success: 'Success',
    warning: 'Warning',
    info: 'Info',
    more: 'more',
    from: 'from',
    page: 'Page',
    next: 'Next',
    previous: 'Previous',
    updating: 'updating',
    remaining: 'remaining',
  },
  settings: {
    title: 'Macros Settings',
    storage: {
      title: 'Storage',
      folder: 'Storage folder',
      folderDesc: 'Where to save food .md files with nutrition data',
    },
    targets: {
      title: 'Daily nutrition targets',
      calories: 'Daily calorie target',
      caloriesDesc: 'Your daily calorie goal in kcal',
      protein: 'Daily protein target',
      proteinDesc: 'Your daily protein goal in grams',
      fat: 'Daily fat target',
      fatDesc: 'Your daily fat goal in grams',
      carbs: 'Daily carbs target',
      carbsDesc: 'Your daily carbohydrates goal in grams',
    },
    display: {
      title: 'Display',
      showSummaryRows: 'Show macros summary rows',
      showSummaryRowsDesc:
        'Toggle whether to display the totals, targets, and remaining rows in the macros table.',
      disableTooltips: 'Disable tooltips',
      disableTooltipsDesc: 'Turn off all hover tooltips in macros tables for a cleaner interface.',
      showCellPercentages: 'Show cell percentages',
      showCellPercentagesDesc: 'Display percentage values inside macro cells in tables.',
      energyUnit: 'Energy unit',
      energyUnitDesc: 'Choose between kilocalories (kcal) and kilojoules (kJ) for energy display',
      energyUnitKcal: 'Kilocalories (kcal)',
      energyUnitKj: 'Kilojoules (kJ)',
      energyConversionNote:
        'Energy values are automatically converted between kcal and kJ (1 kcal = 4.184 kJ)',
      addToMacrosTabOrder: 'Add to macros tab order',
      addToMacrosTabOrderDesc:
        'Customize the order of tabs in the Add to Macros modal by dragging and dropping them below.',
      tabOrderInstructions:
        'Drag and drop the items below to change the tab order. The first item will be the default active tab.',
      dragToReorder: 'Drag to reorder',
    },
    charts: {
      title: 'Pie chart customization',
      proteinColor: 'Protein color',
      proteinColorDesc: 'Color for protein slice in the pie chart',
      fatColor: 'Fat color',
      fatColorDesc: 'Color for fat slice in the pie chart',
      carbsColor: 'Carbs color',
      carbsColorDesc: 'Color for carbs slice in the pie chart',
      preview: 'Pie chart preview',
    },
    meals: {
      title: 'Meal templates',
      description:
        'Create reusable meal templates that can be quickly added to your macro tracking.',
      create: 'Create a new meal template',
      createDesc: 'Create a new set of food items that you often eat together',
      addButton: '+ Add meal template',
      noTemplates: 'No meal templates yet. Create one using the button above.',
    },
    api: {
      title: 'API configuration (required)',
      description:
        'To use the food search functionality, you must sign up for free FatSecret API credentials. This plugin does not include default API keys.',
      signupText: 'Sign up for free API credentials at:',
      securityNote: 'Your API credentials will be stored securely in your vault settings.',
      notConfigured:
        '‚ö†Ô∏è API credentials not configured. Food search will not work until you add your credentials.',
      configured: '‚úÖ API credentials configured successfully.',
      key: 'FatSecret API key',
      keyDesc: 'Your fatSecret API key (required for food search functionality)',
      secret: 'FatSecret API secret',
      secretDesc: 'Your fatsecret API secret (required for food search functionality)',
      testConnection: 'Test API connection',
      testConnectionDesc: 'Click to test your FatSecret API credentials.',
    },
    developer: {
      title: 'Developer mode',
      enable: 'Enable developer mode',
      enableDesc:
        'Enables debug logging and developer commands. Only use if you need to troubleshoot the plugin.',
      active:
        'Developer mode is active. Additional developer commands are available in the command palette.',
    },
  },
  food: {
    search: {
      title: 'Search for food',
      placeholder: 'Start typing to search (e.g., Apple)',
      noResults: 'No results found. Try a different search term.',
      searching: 'Searching...',
      results: 'Results for "{searchTerm}" (Page {page})',
    },
    entry: {
      title: 'Add Food Item',
      description: 'Choose how you would like to add your food item:',
      liveSearch: 'Live Search',
      liveSearchDesc: 'Search FatSecret database for nutritional information',
      manualEntry: 'Manual Entry',
      manualEntryDesc: 'Manually enter nutritional information for your food item',
      apiConfigured: '‚úì API configured',
      apiNotConfigured: '‚ö† API not configured',
      alwaysAvailable: '‚úì Always available',
    },
    manual: {
      title: 'Manual Food Entry',
      description: 'Enter the nutritional information for your food item:',
      foodName: 'Food Name',
      servingSize: 'Serving Size (grams)',
      calories: 'Calories',
      energy: 'Energy',
      protein: 'Protein (g)',
      fat: 'Fat (g)',
      carbs: 'Carbohydrates (g)',
      required: '* Required fields',
      save: 'Save Food Item',
      multipleEntryDesc:
        'You can add multiple food items in one session using the "Add & Continue" button.',
      addedItems: 'Added Items',
      noItemsAdded: 'No items added yet',
      addAnotherItem: 'Add Another Food Item',
      enterFoodInfo: 'Enter Food Information',
      addAndContinue: 'Add & Continue',
      addThisItem: 'Add This Item',
      finishAdding: 'Finish Adding',
      itemSavedSuccessfully: 'Food item saved successfully!',
      itemSavedReadyForNext: 'Item saved! Ready to add another.',
      allItemsSaved: 'All {{count}} items saved successfully!',
      itemRemoved: 'Item removed from list',
      keyboardShortcuts: 'Tip: Press Enter to save, Ctrl+Enter to add & continue',
    },
    customServing: {
      title: 'Custom serving size for {foodName}',
      description: 'Default serving is {defaultServing}g. Enter a custom serving size in grams:',
      submit: 'Submit',
    },
  },
  meals: {
    create: {
      title: 'Create New Meal Template',
      description:
        'Give your meal template a name, then search and select food items to include in it.',
      nameLabel: 'Meal Template Name',
      namePlaceholder: 'e.g., Breakfast, Post-Workout, etc.',
      searchPlaceholder: 'Search food items...',
      availableFoods: 'ü•ó Available Food Items',
      selectedItems: 'Selected Items',
      noSelectedItems: 'No items selected yet',
      noResults: 'No food items found',
      addToMeal: '+ Add to Meal',
      remove: '‚àí Remove',
      editServing: '‚úé Edit Serving',
      create: 'Create Meal Template',
      customServing: 'Custom: {serving}g',
      defaultServing: 'Default: {serving}',
    },
    edit: {
      title: 'Edit Meal Template: "{mealName}"',
      description:
        'Search and select food items to include in this meal template. You can customize serving sizes for each item.',
      saveChanges: 'Save Changes',
    },
    addTo: {
      title: 'Add Items to Macros',
      description:
        'Search and select meal templates or individual food items to add to your macros table.',
      searchPlaceholder: 'Search meals and foods...',
      mealTemplates: 'üçΩÔ∏è Meal Templates',
      individualFoods: 'ü•ó Individual Foods',
      selectedItems: 'Selected Items',
      createGroup: 'üóÇÔ∏è Create Group',
      groupName: 'Group Name',
      groupNamePlaceholder: 'Enter group name (e.g., breakfast, lunch)',
      selectFoodsForGroup: 'Select Foods for This Group',
      addToGroup: '+ Add to Group',
      enterGroupNameFirst: 'Enter group name first',
      pendingGroup: 'Pending Group',
      noSelectedItems: 'No items selected yet',
      addSelectedItems: 'Add Selected Items',
      addMeal: '+ Add Meal',
      addFood: '+ Add Food',
      added: '‚úì Added',
    },
  },
  table: {
    headers: {
      food: 'Food',
      serving: 'Serving',
      calories: 'Calories',
      protein: 'Protein',
      fat: 'Fat',
      carbs: 'Carbs',
      servingShort: 'Qty',
      caloriesShort: 'Cal',
      proteinShort: 'Pro',
      fatShort: 'Fat',
      carbsShort: 'Carb',
    },
    summary: {
      totals: 'Totals',
      targets: 'Targets',
      remaining: 'Remaining',
      today: "Today's Summary",
      yesterday: "Yesterday's Summary",
      date: '{date} Summary',
      over: 'over',
      macrosSummary: 'Macros Summary',
      dailyTarget: 'of daily target',
      otherItems: 'Other Items',
    },
    actions: {
      addItems: 'Add Items',
      collapseAll: 'Collapse All',
      expandAll: 'Expand All',
      removeItem: 'Remove Item',
      clickToEdit: 'Click to edit',
      longPressToDelete: 'Long press to delete',
      removeFromMeal: 'Remove {itemName} from {mealName}',
      removeGroup: 'Remove group',
      removeMeal: 'Remove meal',
      longPressForOptions: 'Long press for options',
      rightClickForOptions: 'Right click for options',
    },
    meal: {
      items: '{count} items',
      calories: '{calories} cal',
    },
    confirmDelete: {
      mealitem: 'Remove this item from the meal?',
      mealitemContext:
        'This will remove the selected food item from your meal. This action cannot be undone.',
      item: 'Remove "{itemName}"?',
      itemContext: 'This action cannot be undone.',
    },
  },
  charts: {
    title: "Today's Macros",
    titleDate: 'Macros for {date}',
    titleCombined: 'Combined Macros (last {days} days)',
    titleMultiple: 'Combined Macros: {ids}',
    calories: 'Calories:',
    noMacros: 'No macros found for IDs: {ids}',
    noData: 'No data found for IDs: {ids}',
    loading: 'Loading chart data...',
    error: 'Unable to render macro chart. Please reload the page.',
    errors: {
      noIdsProvided: 'No id(s) provided in macrospc block',
      renderError: 'Error rendering chart: {error}',
    },
  },
  calculator: {
    title: 'Macro Calculator',
    description: 'Calculate nutrition totals for selected macro tables.',
    selectTables: 'Select macro tables to include in calculation:',
    noTables: 'No macro tables found. Create some macros tables first.',
    calculate: 'Calculate Totals',
    results: 'Calculation Results',
    aggregate: 'Aggregate Totals',
    breakdown: 'Breakdown by Table',
    combinedTotals: 'Combined Totals',
    noDetailData: 'No detailed data available.',
    chartTitle: 'Macro Trends Over Time',
    notEnoughData: 'Need at least 2 data points to show trends (currently have {count})',
    chartError: 'Chart Error: {error}',
    dataSummary: 'Data Summary:',
    quantity: 'Quantity',
    standardQuantity: 'Standard',
    errorLoadingData: 'Error loading data: {error}',
    summaryDays: 'Calculation Summary (last {count} day{days})',
    summaryTables: 'Calculation Summary ({count} table{tables})',
    chartAxisDate: 'Date/ID',
    chartAxisGrams: 'Grams',
    tableHeaders: {
      id: 'Table ID',
    },
    tooltips: {
      calories: '{value} calories from {id} ({percentage}% of total)',
      macro: '{value} {macro} ({percentage}% of total macros)',
    },
    errors: {
      noContent: 'Error: No content provided in macroscalc block.',
      noIds: 'Error: Please specify table IDs using "id:" or "ids:"',
      noTableIds: 'Error: No table IDs provided.',
    },
  },
  commands: {
    forceReload: 'Force reload all macros',
    addFood: 'Add food item (search or manual entry)',
    toggleDebug: 'Toggle debug mode',
  },
  notifications: {
    foodSaved: 'Saved {fileName}',
    foodSaveError: 'Error saving food item: {error}',
    mealTemplateCreated: 'Meal template "{name}" created successfully with {count} items!',
    mealTemplateUpdated: 'Meal template "{name}" updated successfully',
    itemsAdded: 'Added {count} items to your macros table.',
    itemsAddError: 'Error adding items: {error}',
    reloadComplete: 'Reload complete!',
    reloadInProgress: 'Forcing complete reload of all macros data...',
    debugEnabled: 'Debug mode enabled',
    debugDisabled: 'Debug mode disabled',
    testConnectionSuccess: 'Test connection successful!',
    testConnectionFailed: 'Test connection failed. Please check your API credentials.',
    apiCredentialsRequired: 'Please configure your API credentials first.',
    chartPreviewUnavailable: 'Chart preview unavailable',
    developerModeChanged: 'Developer mode {status}. Restart Obsidian to apply all changes.',
    languageChanged: 'Language changed to {language}. Restart Obsidian to apply changes.',
    itemRemoved: 'Item {item} removed',
    itemRemoveError: 'Error removing item: {error}',
    removalCancelled: 'Removal cancelled',
    quantityUpdateError: 'Error updating quantity: {error}',
  },
  validation: {
    required: 'This field is required',
    invalidNumber: 'Please enter a valid number',
    invalidServing: 'Please enter a valid serving size',
    duplicateName: 'A food item named "{name}" already exists',
    duplicateMealName:
      'A meal template with that name already exists. Please choose a different name.',
    selectAtLeastOne: 'Please select at least one item',
    enterMealName: 'Please enter a meal name',
    noNutritionData: 'Could not process nutrition data for this food.',
  },
  comments: {
    addMealComment: 'Add Meal Comment',
    editMealComment: 'Edit Meal Comment',
    addItemComment: 'Add Food Comment',
    editItemComment: 'Edit Food Comment',
    mealDescription: 'Add a comment for the meal: {mealName}',
    itemDescription: 'Add a comment for: {itemName}',
    commentLabel: 'Comment:',
    mealPlaceholder: 'e.g., "Post-workout meal" or "High protein breakfast"',
    itemPlaceholder: 'e.g., "Organic brand" or "From local store"',
    addComment: 'Add Comment',
    updateComment: 'Update Comment',
    removeComment: 'Remove Comment',
    commentAdded: 'Comment added successfully',
    commentUpdated: 'Comment updated successfully',
    commentRemoved: 'Comment removed successfully',
    saveError: 'Error saving comment: {error}',
    removeError: 'Error removing comment: {error}',
    tooLong: 'Comment is too long (maximum 200 characters)',
    contextMenu: {
      addComment: 'Add comment',
      editComment: 'Edit comment',
      removeComment: 'Remove comment',
    },
  },
  tooltips: {
    percentage: '{value}g {macro} ‚Ä¢ {percent}% of daily {macro} target',
    remaining: 'remaining',
    over: '{over}g over',
    targetExceeded: '(Target exceeded)',
    approachingTarget: '(Approaching target)',
    calories: '{value} calories ‚Ä¢ {percent}% of daily target ‚Ä¢ calories remaining',
    caloriesOver: '{value} calories ‚Ä¢ {percent}% of daily target ‚Ä¢ {over} calories over',
    caloriePercent: '{value} calories ‚Ä¢ {percent}% of daily target',
    macroComposition: '{value}g {macro} ({percent}% of total macros)',
    target: 'Target: {target}{unit}',
    dailyTarget: 'of daily target',
  },
  errors: {
    fileNotFound: 'Selected food item not found.',
    noNutritionData: 'No nutritional data available for this item.',
    invalidServing: 'Invalid default serving size.',
    chartCreationFailed: 'Error creating chart visualization',
    dataLoadTimeout: 'Data load timeout',
    chartLibraryNotAvailable: 'Chart library not available',
    macrosNotFound: 'No macros block found for ID: {id}',
    updateFailed: 'Could not find macros block for ID: {id} to update',
    apiConnectionFailed: 'Error searching for food items. Please try again.',
    unknownError: 'Unknown error occurred',
    noActiveFile: 'No active file',
    macrosBlockNotFound: 'Macros block not found for meal: {mealName}',
    noMacrosData: 'No macros data found',
    mealNotFound: 'Meal "{mealName}" not found',
    foodItemNotFound: 'Food item "{foodName}" not found in meal "{mealName}"',
    updateMacrosBlockFailed: 'Failed to update macros block',
  },
  suggestions: {
    today: 'Today',
    todayDesc: "Insert today's date",
    yesterday: 'Yesterday',
    yesterdayDesc: "Insert yesterday's date",
    thisWeek: 'This Week',
    thisWeekDesc: 'Insert the last 7 days including today',
    lastWeek: 'Last Week',
    lastWeekDesc: 'Insert the previous week (7 days)',
    thisMonth: 'This Month',
    thisMonthDesc: 'Insert all days from start of month to today',
    lastMonth: 'Last Month',
    lastMonthDesc: 'Insert all days from the previous month',
  },
  dates: {
    months: {
      january: 'January',
      february: 'February',
      march: 'March',
      april: 'April',
      may: 'May',
      june: 'June',
      july: 'July',
      august: 'August',
      september: 'September',
      october: 'October',
      november: 'November',
      december: 'December',
    },
    monthsShort: {
      jan: 'Jan',
      feb: 'Feb',
      mar: 'Mar',
      apr: 'Apr',
      may: 'May',
      jun: 'Jun',
      jul: 'Jul',
      aug: 'Aug',
      sep: 'Sep',
      oct: 'Oct',
      nov: 'Nov',
      dec: 'Dec',
    },
    weekdays: {
      monday: 'Monday',
      tuesday: 'Tuesday',
      wednesday: 'Wednesday',
      thursday: 'Thursday',
      friday: 'Friday',
      saturday: 'Saturday',
      sunday: 'Sunday',
    },
    weekdaysShort: {
      mon: 'Mon',
      tue: 'Tue',
      wed: 'Wed',
      thu: 'Thu',
      fri: 'Fri',
      sat: 'Sat',
      sun: 'Sun',
    },
    today: 'today',
    yesterday: 'yesterday',
    tomorrow: 'tomorrow',
  },
};
